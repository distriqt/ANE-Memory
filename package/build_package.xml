<?xml version="1.0" encoding="UTF-8"?> 

<project default="build" name="airpackage"
	xmlns:if="ant:if"
	xmlns:unless="ant:unless"> 

	<dirname property="airpackage.basedir" file="${ant.file.airpackage}" />
	<property file="${airpackage.basedir}/build.config" description="build properties" />
	<import file="${build.common}" />

	<property name="version.release" value="${version_release_major}.${version_release_minor}.${version_release_build}" if:set="version_release_major" />
	<property name="version.release" value="${version_major}.${version_minor}.${version_build}" />
	<property name="version" value="${version_major}.${version_minor}.${version_build}" />
	<lower name="project.namelower" value="${project.name}" />

	<tstamp>
		<format property="publish_date" pattern="yyyy-MM-dd" locale="en,UK" />
	</tstamp>

	<tstamp>
		<format property="publish_date_time" pattern="yyyy-MM-dd'T'HH:mm:ss.000'Z'" locale="en,UK" />
	</tstamp>

	<target name="clean" >
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${airpackage.basedir}">
				<include name="**/build/**" />
				<include name="**/*.airpackage" />
			</fileset>
		</delete>
		<!-- delete all platform/android/subdirectories but not platform/android/AndroidManifest.xml -->
		<if>
			<available file="${airpackage.basedir}/platforms/android" type="dir" />
			<then>
				<for param="androidDir" >
					<path>
						<dirset dir="${airpackage.basedir}/platforms/android" >
							<include name="*"/>
						</dirset>
					</path>
					<sequential>
						<delete includeEmptyDirs="true" failonerror="false" dir="@{androidDir}" />
					</sequential>
				</for>
			</then>
		</if>
	</target>


	<target name="copy_template" >
		<copy todir="${airpackage.basedir}/${output.dir}" overwrite="true" >
			<fileset dir="${common.basedir}/${airpackage.tmpl}">
				<!-- Exclude these as they are just templates for manual integration -->
				<exclude name="assets/**" /> 
				<exclude name="platforms/**" />
			</fileset>
			<filterchain>
				<tokenfilter>
					<replacestring from="@NAME@" to="${airpackage.name}"/>
					<replacestring from="@NAMELOWER@" to="${project.namelower}"/>
					<replacestring from="@DESCRIPTION@" to="${airpackage.description}"/>
					<replacestring from="@GITHUB_REPO@" to="${github.repo}"/>
					<replacestring from="@VERSION@" to="${version}"/>
					<replacestring from="@VERSIONRELEASE@" to="${version.release}"/>
					<replacestring from="@EXTENSIONID@" to="${output.name}"/>
					<replacestring from="@PACKAGE@" to="${package.name}"/>
					<replacestring from="@DATE@" to="${publish_date}"/>
					<replacestring from="@DATETIME@" to="${publish_date_time}"/>
					<replacestring from="@VARIANT@" to="${airpackage.variantname}"/>
					<replacestring from="@ANDROIDPACKAGE@" to="${package.name}"/>
					<replacestring from="@ANDROIDMINSDK@" to="${android.minSdkVersion}"/>
					<replacestring from="@ANDROIDTARGETSDK@" to="${android.targetSdkVersion}"/>
				</tokenfilter>
			</filterchain>
		</copy>
	</target>


	<target name="copy" >

		<!-- See if variant ane dir exists, else copy normal ane -->
		<fileset id="config_ane" dir="${common.basedir}/${output.dir}">
			<include name="${package.ane}" />
		</fileset>
		<fileset id="variant_ane" dir="${common.basedir}/${output.dir}">
			<include name="${airpackage.variant}/*.ane" />
		</fileset>
		<fileset id="normal_ane" dir="${common.basedir}/${output.dir}">
			<include name="*.ane" />
		</fileset>
		<pathconvert refid="config_ane" property="use_config_ane" setonempty="false"/>
		<pathconvert refid="variant_ane" property="use_variant_ane" setonempty="false"/>
		<if>
			<isset property="use_config_ane" />
			<then>
				<copy todir="${airpackage.basedir}/${output.dir}/ane" flatten="true" overwrite="true" >
					<fileset refid="config_ane"/>
				</copy>
			</then>
			<elseif>
				<isset property="use_variant_ane" />
				<then>
					<copy todir="${airpackage.basedir}/${output.dir}/ane" flatten="true" overwrite="true" >
						<fileset refid="variant_ane"/>
					</copy>
				</then>
			</elseif>
			<else>
				<copy todir="${airpackage.basedir}/${output.dir}/ane" flatten="true" overwrite="true" >
					<fileset refid="normal_ane"/>
				</copy>
			</else>
		</if>

		<if>
			<available file="${common.basedir}/${output.dir}/${airpackage.variant}/assets"/>
			<then>
				<copy todir="${airpackage.basedir}/${output.dir}/assets" overwrite="true" includeEmptyDirs="false" failonerror="false">
					<fileset dir="${common.basedir}/${output.dir}/${airpackage.variant}/assets">
						<include name="**" />
					</fileset>
				</copy>
			</then>
			<else>
				<copy todir="${airpackage.basedir}/${output.dir}/assets" overwrite="true" includeEmptyDirs="false" failonerror="false">
					<fileset dir="${common.basedir}/${output.dir}/assets">
						<include name="**" />
					</fileset>
				</copy>
			</else>
		</if>

		
		<copy todir="${airpackage.basedir}/${output.dir}" overwrite="true" failonerror="false">
			<fileset dir="${common.basedir}/../..">
				<include name="CHANGELOG.md" />
				<include name="README.md" />
			</fileset> 
			<filterchain>
				<tokenfilter>
					<replacestring from="![](images/hero.png)" to=""/>
					<replacestring from="![](images/promo.png)" to=""/>
				</tokenfilter>
			</filterchain>
		</copy>
		<copy todir="${airpackage.basedir}/${output.dir}" overwrite="true" failonerror="false">
			<fileset dir="${common.basedir}">
				<include name="CHANGELOG.md" />
				<include name="README.md" />
			</fileset> 
			<filterchain>
				<tokenfilter>
					<replacestring from="![](images/hero.png)" to=""/>
					<replacestring from="![](images/promo.png)" to=""/>
				</tokenfilter>
			</filterchain>
		</copy>
		<copy todir="${airpackage.basedir}/${output.dir}" overwrite="true" >
			<fileset dir="${airpackage.basedir}">
				<include name="package.json" />
				<include name="CHANGELOG.md" />
				<include name="README.md" />
				<include name="assets/**" />
				<include name="platforms/**" />
			</fileset> 
			<filterchain>
				<tokenfilter>
					<replacestring from="@NAME@" to="${airpackage.name}"/>
					<replacestring from="@NAMELOWER@" to="${project.namelower}"/>
					<replacestring from="@DESCRIPTION@" to="${airpackage.description}"/>
					<replacestring from="@GITHUB_REPO@" to="${github.repo}"/>
					<replacestring from="@VERSION@" to="${version}"/>
					<replacestring from="@VERSIONRELEASE@" to="${version.release}"/>
					<replacestring from="@EXTENSIONID@" to="${output.name}"/>
					<replacestring from="@PACKAGE@" to="${package.name}"/>
					<replacestring from="@DATE@" to="${publish_date}"/>
					<replacestring from="@DATETIME@" to="${publish_date_time}"/>
					<replacestring from="@VARIANT@" to="${airpackage.variantname}"/>
					<replacestring from="@ANDROIDPACKAGE@" to="${package.name}"/>
					<replacestring from="@ANDROIDMINSDK@" to="${android.minSdkVersion}"/>
					<replacestring from="@ANDROIDTARGETSDK@" to="${android.targetSdkVersion}"/>
				</tokenfilter>
			</filterchain>
		</copy>
	</target>


	<target name="build_android" >
		
		<fileset dir="${common.basedir}/${android.dir}/externals/${airpackage.variant}" erroronmissingdir="false" id="filesetexternals" >
			<include name="*.aar" />
		</fileset>
		<fileset dir="${common.basedir}/${android.dir}/libs/${airpackage.variant}" erroronmissingdir="false" id="filesetvariant">
			<include name="*.aar" />
		</fileset>
		<fileset dir="${common.basedir}/${android.dir}/dependencies" erroronmissingdir="false" id="filesetdependencies">
			<include name="*.aar" />
		</fileset>
		<foreach target="explode_aar" param="explode_aar_file">
			<param name="airpackage.basedir" value="${airpackage.basedir}" />
			<path>
				<union>
					<resources refid="filesetexternals" />
					<resources refid="filesetvariant" />
					<resources refid="filesetdependencies" />
				</union>
			</path>
		</foreach>

	</target> 


	<target name="explode_aar">
		<basename property="explode_aar_name" file="${explode_aar_file}" suffix=".aar" />
		<echo message="explode ${explode_aar_file} ${explode_aar_name}" />
		<mkdir dir="${airpackage.basedir}/${output.tmpdir}/${explode_aar_name}" />
		<unzip src="${explode_aar_file}" dest="${airpackage.basedir}/${output.tmpdir}/${explode_aar_name}" overwrite="true"/>
		<copy overwrite="true" failonerror="false" quiet="true" todir="${airpackage.basedir}/${output.dir}/platforms/android/${explode_aar_name}" >
			<fileset dir="${airpackage.basedir}/${output.tmpdir}/${explode_aar_name}" >
				<include name="AndroidManifest.xml" />
			</fileset>
		</copy>
		<copy overwrite="true" failonerror="false" quiet="true" todir="${airpackage.basedir}/${output.dir}/assets/android" >
			<fileset dir="${airpackage.basedir}/${output.tmpdir}/${explode_aar_name}/assets" >
				<include name="**" />
			</fileset>
		</copy>
		<delete dir="${airpackage.basedir}/${output.tmpdir}" />
	</target>


	<!-- BUILD -->

	<target name="build" depends="clean" >
		<antcall target="build_android" />
		<antcall target="copy_template" />
		<antcall target="copy" />
		<exec executable="apm" dir="${airpackage.basedir}">
			<arg line="build build" />
		</exec>
	</target>


	
	<!-- DEPLOY -->

	<target name="deploy" depends="build">
		<foreach target="deploy_package" param="packagefile" inheritall="true">
			<path>
				<fileset dir="${airpackage.basedir}">
					<include name="*.airpackage"/>
				</fileset>
			</path>
		</foreach>
	</target>

	<target name="deploy_package">
		<echo message="deploying to ${github.repo} v${version.release} ${packagefile}" />
		<!-- Upload to github release -->
		<exec executable="gh" failonerror="true">
			<arg line="-R ${github.repo} release upload v${version.release}" />
			<arg line="${packagefile}" />
			<arg line="--clobber" />
		</exec>
		<!-- Publish to apm repository -->
		<exec executable="apm">
			<arg line="publish ${packagefile}" />
		</exec>
	</target>

</project>